# -*- coding: utf-8 -*-
"""how to install sklearn in python

Automatically generated by Colab.

Original file is located at
https://colab.research.google.com/drive/1JoQKObE9NBHMyCA6NcSmmQSymBZ_5STc

Installing **scikit-learn** ($\text{sklearn}$) in Python is straightforward and typically done using the **`pip`** package installer. Scikit-learn requires that **NumPy** and **SciPy** (for numerical operations) are already installed.

Here are the steps to install it:

### 1\. Prerequisite Check (Recommended)

Ensure you have **Python** installed (version 3.8 or newer is recommended) and the package managers **pip** and **setuptools** are up-to-date.

```bash
# Update pip
python -m pip install --upgrade pip
```

### 2\. Standard Installation using pip

The simplest and most common way to install $\text{sklearn}$ is via $\text{pip}$:

```bash
pip install scikit-learn
```

This command will automatically download and install the latest stable version of scikit-learn along with its dependencies ($\text{NumPy}$ and $\text{SciPy}$) if they are not already present.

-----

### 3\. Installation in a Jupyter/Colab Notebook

If you are working within a **Jupyter Notebook** or **Google Colab**, you should use the exclamation mark (`!`) before the command:
"""

!pip install scikit-learn

!pip install scikit-learn

"""-----

### 4\. Installation using Anaconda/Conda (If you use the Anaconda Distribution)

If you manage your Python environment using **Anaconda** or **Miniconda**, it's best practice to use the `conda` package manager:

```bash
conda install scikit-learn
```

Using `conda` is often recommended as it manages complex dependencies, ensuring you have compatible versions of all required scientific packages.

-----

### 5\. Verification

After the installation is complete, you can verify it by opening a Python interpreter (or a new notebook cell) and trying to import the library:
"""


# Churn prediction is
# the process of analyzing customer data to forecast which customers are at high risk of canceling a service or stopping their use of a product. It uses historical data and behavior patterns to identify these customers so a business can proactively implement retention strategies to prevent them from leaving. 
# Key aspects of churn prediction:

# Forecasting risk: It uses data analytics, machine learning, and other techniques to predict the probability of a customer leaving.
# Analyzing behavior: It examines customer behavior, transaction history, product usage, and engagement data to spot trends that may indicate a customer is disengaging.
# Proactive retention: The goal is to intervene before a customer churns, allowing businesses to take targeted action, such as offering promotions or improved support, to encourage them to stay.
# Business impact: Churn prediction is crucial because retaining existing customers is often more cost-effective than acquiring new ones. By reducing churn, businesses can improve customer lifetime value and overall revenue. 




import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Sample Data: (X) features vs (y) target
# X: [Monthly Usage (hrs), Support Calls]
X = np.array([[100, 1], [50, 5], [120, 0], [40, 4], [80, 2]])
# y: Target (0=Stay, 1=Churn)
y = np.array([0, 1, 0, 1, 0])

# Split data (standard ML workflow)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)

# Initialize and train the Binary Logistic Regression model
# The 'solver' parameter dictates the optimization method
binary_model = LogisticRegression(solver='liblinear', random_state=42)
binary_model.fit(X_train, y_train)

# Predict class (0 or 1)
predictions = binary_model.predict(X_test)
# Predict probabilities for each class
probabilities = binary_model.predict_proba(X_test)

print(f"Predictions: {predictions}")
# print(f"Probabilities (P(0), P(1)):\n {probabilities.round(2)}")
print(f"Model Accuracy: {accuracy_score(y_test, predictions):.2f}")

"""If the installation was successful, this code will execute without an error and display the installed version number."""