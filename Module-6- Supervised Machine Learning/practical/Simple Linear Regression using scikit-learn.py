# -*- coding: utf-8 -*-
"""how to install sklearn in python

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JoQKObE9NBHMyCA6NcSmmQSymBZ_5STc

Installing **scikit-learn** ($\text{sklearn}$) in Python is straightforward and typically done using the **`pip`** package installer. Scikit-learn requires that **NumPy** and **SciPy** (for numerical operations) are already installed.

Here are the steps to install it:

### 1\. Prerequisite Check (Recommended)

Ensure you have **Python** installed (version 3.8 or newer is recommended) and the package managers **pip** and **setuptools** are up-to-date.

```bash
# Update pip
python -m pip install --upgrade pip
```

### 2\. Standard Installation using pip

The simplest and most common way to install $\text{sklearn}$ is via $\text{pip}$:

```bash
pip install scikit-learn
```

This command will automatically download and install the latest stable version of scikit-learn along with its dependencies ($\text{NumPy}$ and $\text{SciPy}$) if they are not already present.

-----

### 3\. Installation in a Jupyter/Colab Notebook

If you are working within a **Jupyter Notebook** or **Google Colab**, you should use the exclamation mark (`!`) before the command:
"""

!pip install scikit-learn

!pip install scikit-learn

"""-----

### 4\. Installation using Anaconda/Conda (If you use the Anaconda Distribution)

If you manage your Python environment using **Anaconda** or **Miniconda**, it's best practice to use the `conda` package manager:

```bash
conda install scikit-learn
```

Using `conda` is often recommended as it manages complex dependencies, ensuring you have compatible versions of all required scientific packages.

-----

### 5\. Verification

After the installation is complete, you can verify it by opening a Python interpreter (or a new notebook cell) and trying to import the library:
"""

import numpy as np
from sklearn.linear_model import LinearRegression

# Training Data
# X: Ad Spend (in thousands of dollars)
X = np.array([10, 20, 30, 40, 50]).reshape(-1, 1) # Must be 2D for scikit-learn
# y: Sales (in thousands of units)
y = np.array([25, 45, 65, 80, 105])

# 1. Initialize and Train Model
slr_model = LinearRegression()
slr_model.fit(X, y)

# 2. Get the Coefficients
intercept = slr_model.intercept_
slope = slr_model.coef_[0]

print(f"Intercept (β₀): {intercept:.2f}")
print(f"Slope (β₁): {slope:.2f}")
# Interpretation: Sales = 5.00 + 1.95 * Ad_Spend
# A $1k increase in ad spend predicts a 1.95k increase in sales.

# 3. Make a Prediction
# Predict sales for a $60,000 ad spend (60 in units of 1k)
new_ad_spend = np.array([[60]])
predicted_sales = slr_model.predict(new_ad_spend)

print(f"Predicted Sales for $60k Ad Spend: {predicted_sales[0]:.2f}k units")

"""If the installation was successful, this code will execute without an error and display the installed version number."""